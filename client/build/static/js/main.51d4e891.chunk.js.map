{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","key","_id","from","to","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","event","push","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","marginRight","onClick","disabled","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.51d4e891.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const request = useCallback(\n        async (url, method = \"GET\", body = null, headers = {}) => {\n            setLoading(true);\n            try {\n                if (body) {\n                    body = JSON.stringify(body);\n                    headers[\"Content-Type\"] = \"application/json\";\n                }\n                const response = await fetch(url, {\n                    method,\n                    body,\n                    headers,\n                });\n                const data = await response.json();\n                if (!response.ok) {\n                    throw new Error(data.message || \"Something was wrong \");\n                }\n                setLoading(false);\n                return data;\n            } catch (e) {\n                // console.log(\"Catch:\", e.message)\n                setLoading(false);\n                setError(e.message);\n                throw e;\n            }\n        },\n        []\n    );\n\n    const clearError = useCallback(() => setError(null), []);\n    return { loading, request, error, clearError };\n};\n","import { createContext } from \"react\";\n\nfunction noop() {}\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null,\n    login: noop,\n    logout: noop,\n    isAuthenticated: false,\n});\n","import React from \"react\";\n\nexport const Loader = () => (\n    <div style={{display: \"flex\", justifyContent: \"center\", paddingTop: \"2rem\"}}>\n        <div className=\"preloader-wrapper big active\">\n            <div className=\"spinner-layer spinner-blue-only\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\"\n\nexport const LinksList = ({ links }) => {\n    if (!links.length) {\n        return <p className=\"center\">There're still no links</p>\n    }\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Number</th>\n                    <th>Original</th>\n                    <th>Shorted</th>\n                    <th>Open</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {links.map((link, index) => {\n                    return (\n                        <tr key={link._id}>\n                            <td>{index + 1}</td>\n                            <td>{link.from}</td>\n                            <td>{link.to}</td>\n                            <td>\n                                <Link to={`/detail/${link._id}`}>Open</Link>\n                            </td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { Loader } from \"../components/Loader\";\nimport { LinksList } from \"../components/LinksList\";\n\nexport const LinksPage = () => {\n    const [links, setLinks] = useState([]);\n    const { loading, request } = useHttp();\n    const { token } = useContext(AuthContext);\n    const fetchLinks = useCallback(async () => {\n        try {\n            const fetched = await request(\"api/link\", \"GET\", null, {\n                Authorization: `Bearer ${token}`,\n            });\n            setLinks(fetched);\n        } catch (error) {}\n    }, [token, request]);\n\n    useEffect(() => {\n        fetchLinks();\n    }, [fetchLinks]);\n    if (loading) {\n        return <Loader />;\n    }\n    return <div>{!loading && <LinksList links={links} />}</div>;\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\nexport const CreatePage = () => {\n    const history = useHistory()\n    const auth = useContext(AuthContext);\n    const { request } = useHttp();\n    const [link, setLink] = useState(\"\");\n\n    useEffect(() => {\n        window.M.updateTextFields();\n    }, []);\n\n    const pressHandler = async (event) => {\n        if (event.key === \"Enter\") {\n            try {\n                const data = await request(\n                    \"/api/link/generate\",\n                    \"POST\",\n                    { from: link },\n                    {\n                        Authorization: `Bearer ${auth.token}`,\n                    }\n                );\n                await history.push(`/detail/${data.link._id}`)\n            } catch (e) {}\n        }\n    };\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Write a link\"\n                        id=\"link\"\n                        type=\"text\"\n                        value={link}\n                        onChange={(e) => setLink(e.target.value)}\n                        onKeyPress={pressHandler}\n                    />\n                    <label htmlFor=\"link\">Input your link</label>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\n\nexport const LinkCard = ({link}) => {\n    return (\n        <div>\n            <h2>Link</h2>\n            <p>Your link: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\n            <p>It's from: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\n            <p>Number of clicks: <strong>{link.clicks}</strong></p>\n            <p>Date created: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useCallback } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { Loader } from \"../components/Loader\";\nimport { LinkCard } from \"../components/LinkCard\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const DetailPage = () => {\n    const { token } = useContext(AuthContext);\n    const { request, loading } = useHttp();\n    const [link, setLink] = useState(null);\n    const linkId = useParams().id;\n\n    const getLink = useCallback(async () => {\n        try {\n            const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\n                Authorization: `Bearer ${token}`,\n            });\n            setLink(fetched);\n        } catch (error) {}\n    }, [token, linkId, request]);\n\n    useEffect(() => {\n        getLink();\n    }, [getLink]);\n\n    if (loading) {\n        return <Loader />;\n    }\n\n    return <div>{!loading && link && <LinkCard link={link} />}</div>;\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useMessage } from \"../hooks/message.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const AuthPage = () => {\n    const auth = useContext(AuthContext)\n    const message = useMessage();\n    const { loading, request, error, clearError } = useHttp();\n    const [form, setForm] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    useEffect(() => {\n        message(error);\n        clearError();\n    }, [error, message, clearError]);\n\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n\n    const changeHandler = (event) => {\n        setForm({ ...form, [event.target.name]: event.target.value });\n    };\n\n    const registerHandler = async () => {\n        try {\n            const data = await request(\"/api/auth/register\", \"POST\", {\n                ...form,\n            });\n            message(data.message);\n        } catch (error) {}\n    };\n\n    const loginHandler = async () => {\n        try {\n            const data = await request(\"/api/auth/login\", \"POST\", {\n                ...form,\n            });\n            // message(data.message);\n            auth.login(data.token, data.userId)\n        } catch (error) {}\n    };\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n                <h1>Shorten your link</h1>\n\n                <div className=\"card blue darken-1\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title\">Authorization</span>\n                        <div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Email\"\n                                    id=\"email\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    className=\"yellow-input\"\n                                    value={form.email}\n                                    onChange={changeHandler}\n                                />\n                                <label htmlFor=\"email\">Input your email</label>\n                            </div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Password\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"yellow-input\"\n                                    value={form.password}\n                                    onChange={changeHandler}\n                                />\n                                <label htmlFor=\"password\">\n                                    Input your password\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn yellow darken-4\"\n                            style={{ marginRight: 10 }}\n                            onClick={loginHandler}\n                            disabled={loading}\n                        >\n                            Login\n                        </button>\n                        <button\n                            className=\"btn grey lighten-1 black-text\"\n                            onClick={registerHandler}\n                            disabled={loading}\n                        >\n                            Register{\" \"}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { useCallback } from \"react\";\n\nexport const useMessage = () => {\n    return useCallback((text) => {\n        if (window.M && text) {\n            window.M.toast({ html: text });\n        }\n    }, []);\n};\n","import React, { useContext } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const Navbar = () => {\n    const history = useHistory();\n    const auth = useContext(AuthContext);\n\n    const logoutHandler = (event) => {\n        event.preventDefault();\n        auth.logout();\n        history.push(\"/\");\n    };\n    return (\n        <nav>\n            {/* <ul id=\"slide-out\" class=\"sidenav\">\n                <li>\n                    <div class=\"user-view\">\n                        <div class=\"background\">\n                            <img src=\"images/office.jpg\" />\n                        </div>\n                        <a href=\"#user\">\n                            <img class=\"circle\" src=\"images/yuna.jpg\" />\n                        </a>\n                        <a href=\"#name\">\n                            <span class=\"white-text name\">John Doe</span>\n                        </a>\n                        <a href=\"#email\">\n                            <span class=\"white-text email\">\n                                jdandturk@gmail.com\n                            </span>\n                        </a>\n                    </div>\n                </li>\n                <li>\n                    <a href=\"#!\">\n                        <i class=\"material-icons\">cloud</i>First Link With Icon\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#!\">Second Link</a>\n                </li>\n                <li>\n                    <div class=\"divider\"></div>\n                </li>\n                <li>\n                    <a class=\"subheader\">Subheader</a>\n                </li>\n                <li>\n                    <a class=\"waves-effect\" href=\"#!\">\n                        Third Link With Waves\n                    </a>\n                </li>\n            </ul>\n            <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger\">\n                <i class=\"material-icons\">menu</i>\n            </a> */}\n            <div\n                className=\"nav-wrapper blue darken-1\"\n                style={{ padding: \"0 2rem\" }}\n            >\n                <span className=\"brand-logo\">URL Shortener</span>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li>\n                        <NavLink to=\"/create\">Create</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"/links\">Links</NavLink>\n                    </li>\n                    <li>\n                        <a href=\"/\" onClick={logoutHandler}>\n                            Logout\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n};\n","import React from \"react\";\nimport \"materialize-css\";\nimport { useRoutes } from \"./routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useAuth } from \"./hooks/auth.hook\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Loader } from \"./components/Loader\";\n\nfunction App() {\n    const { token, login, logout, userId, ready } = useAuth();\n    const isAuthenticated = !!token;\n    const routes = useRoutes(isAuthenticated);\n\n    if (!ready) {\n        return <Loader />\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{ token, login, logout, userId, isAuthenticated }}\n        >\n            <Router>\n                {isAuthenticated && <Navbar />}\n                <div className=\"container\">{routes}</div>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import { useState, useCallback, useEffect } from \"react\";\n\nconst storageName = \"userData\";\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null);\n    const [ready, setReady] = useState(false);\n    const [userId, setUserId] = useState(null);\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken);\n        setUserId(id);\n\n        localStorage.setItem(\n            storageName,\n            JSON.stringify({\n                userId: id,\n                token: jwtToken,\n            })\n        );\n    }, []);\n    const logout = useCallback(() => {\n        setToken(null);\n        setUserId(null);\n        localStorage.removeItem(storageName);\n    }, []);\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName));\n\n        if (data && data.token) {\n            login(data.token, data.userId);\n        }\n        setReady(true);\n    }, [login]);\n\n    return { login, logout, token, userId, ready };\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LinksPage } from \"./pages/LinksPage\";\nimport { CreatePage } from \"./pages/CreatePage\";\nimport { DetailPage } from \"./pages/DetailPage\";\nimport { AuthPage } from \"./pages/AuthPage\";\n\nexport const useRoutes = (isAuthenticated) => {\n    if (isAuthenticated) {\n        return (\n            <Switch>\n                <Route path=\"/links\" exact>\n                    <LinksPage />\n                </Route>\n                <Route path=\"/create\" exact>\n                    <CreatePage />\n                </Route>\n                <Route path=\"/detail/:id\" exact>\n                    <DetailPage />\n                </Route>\n                <Redirect to=\"/create\" />\n            </Switch>\n        )\n    }\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <AuthPage />\n            </Route>\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}