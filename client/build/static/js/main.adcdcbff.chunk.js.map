{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/Dialog.js","components/LinksList.js","hooks/message.hook.js","pages/LinksPage.js","pages/CreatePage.js","pages/DetailPage.js","pages/AuthPage.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","Dialog","header","text","index","func","useEffect","elems","document","querySelectorAll","window","M","Modal","init","id","wordWrap","onClick","href","LinksList","links","deleteLink","length","marginTop","map","link","key","_id","overflow","from","to","useMessage","toast","html","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","linkId","CreatePage","history","useHistory","auth","setLink","updateTextFields","pressHandler","event","push","placeholder","type","value","onChange","e","target","onKeyPress","htmlFor","DetailPage","useParams","getLink","rel","clicks","Date","date","toLocaleDateString","data-target","AuthPage","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","marginRight","disabled","Navbar","closeHandler","Sidenav","getInstance","querySelector","close","navList","preventDefault","paddingLeft","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console"],"mappings":"yPAEaA,EAAU,WAAO,IAAD,EACKC,oBAAS,GADd,mBAClBC,EADkB,KACTC,EADS,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,KAiCzB,MAAO,CAAEH,UAASI,QA9BFC,sBAAW,uCACvB,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC/CT,GAAW,GADf,SAGYQ,IACAA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBALtC,SAO+BG,MAAMP,EAAK,CAC9BE,SACAC,OACAC,YAVZ,cAOcI,EAPd,iBAY2BA,EAASC,OAZpC,WAYcC,EAZd,OAaaF,EAASG,GAbtB,uBAckB,IAAIC,MAAMF,EAAKG,SAAW,wBAd5C,eAgBQlB,GAAW,GAhBnB,kBAiBee,GAjBf,wCAoBQf,GAAW,GACXE,EAAS,KAAEgB,SArBnB,+DADuB,sDA0BvB,IAIuBjB,QAAOkB,WADff,uBAAY,kBAAMF,EAAS,QAAO,MChCzD,SAASkB,KAEF,IAAMC,EAAcC,wBAAc,CACrCC,MAAO,KACPC,OAAQ,KACRC,MAAOL,EACPM,OAAQN,EACRO,iBAAiB,ICPRC,EAAS,kBAClB,yBACIC,MAAO,CACHC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SAGhB,yBAAKC,UAAU,gCACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,YAEnB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAEnB,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,gB,OCjBtBC,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAM1C,OALAC,qBAAU,WACN,IAAMC,EAAQC,SAASC,iBAAiB,UACxCC,OAAOC,EAAEC,MAAMC,KAAKN,KACrB,IAGC,yBAAKO,GAAE,eAAUV,GAASJ,UAAU,SAChC,yBAAKA,UAAU,iBACX,4BAAKE,GACL,uBAAGN,MAAO,CAAEmB,SAAU,eAAiBZ,IAE3C,yBAAKH,UAAU,gBACX,4BAAQA,UAAU,wBAAwBgB,QAASX,GAAnD,MAGA,uBAAGY,KAAK,KAAKjB,UAAU,qCAAvB,aCdHkB,EAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/B,OAAKD,EAAME,OAKP,yBAAKrB,UAAU,YAAYJ,MAAO,CAAE0B,UAAW,SAC3C,yBAAKtB,UAAU,OACX,yBAAKA,UAAU,UAAf,KACA,yBAAKA,UAAU,UAAf,YACA,yBAAKA,UAAU,UAAf,WACA,yBAAKA,UAAU,UAAf,WAIHmB,EAAMI,KAAI,SAACC,EAAMpB,GACd,OACI,yBAAKJ,UAAU,MAAMyB,IAAKD,EAAKE,KAC3B,yBAAK1B,UAAU,UAAUI,EAAQ,GACjC,yBACIJ,UAAU,SACVJ,MAAO,CACH+B,SAAU,SACVZ,SAAU,eAGbS,EAAKI,MAEV,yBACI5B,UAAU,SACVJ,MAAO,CACH+B,SAAU,SACVZ,SAAU,eAGbS,EAAKK,IAEV,yBAAK7B,UAAU,UACX,kBAAC,IAAD,CAAM6B,GAAE,kBAAaL,EAAKE,MAA1B,QACA,6BACA,uBACIT,KAAI,gBAAWb,GACfJ,UAAU,iBAFd,UAMA,kBAAC,EAAD,CACIE,OAAO,eACPC,KAAI,+CAA0CqB,EAAKI,KAA/C,KACJxB,MAAOA,EACPC,KAAM,kBAAMe,EAAWI,EAAKE,cAhD7C,uBAAG1B,UAAU,UAAb,4BCJF8B,EAAa,WACtB,OAAO3D,uBAAY,SAACgC,GACZO,OAAOC,GAAKR,GACZO,OAAOC,EAAEoB,MAAM,CAAEC,KAAM7B,MAE5B,KCIM8B,EAAY,WAAO,IAAD,EACDpE,mBAAS,IADR,mBACpBsD,EADoB,KACbe,EADa,OAEqBtE,IAAxCE,EAFmB,EAEnBA,QAASI,EAFU,EAEVA,QAASF,EAFC,EAEDA,MAAOkB,EAFN,EAEMA,WAC3BD,EAAU6C,IACRxC,EAAU6C,qBAAW/C,GAArBE,MAEF8C,EAAajE,sBAAW,sBAAC,4BAAAE,EAAA,+EAEDH,EAAQ,WAAY,MAAO,KAAM,CACnDmE,cAAc,UAAD,OAAY/C,KAHN,OAEjBgD,EAFiB,OAKvBJ,EAASI,GALc,uGAO5B,CAAChD,EAAOpB,IAELkD,EAAU,uCAAG,WAAOmB,GAAP,eAAAlE,EAAA,+EAEQH,EAAQ,aAAD,OAAcqE,GAAU,SAAU,KAAM,CAC9DF,cAAc,UAAD,OAAY/C,KAHlB,OAELR,EAFK,OAKXG,EAAQH,EAAKG,SACbmD,IANW,yGAAH,sDAuBhB,OAbA9B,qBAAU,WACNrB,EAAQjB,GACRkB,MACD,CAAClB,EAAOiB,EAASC,IAEpBoB,qBAAU,WACN8B,MACD,CAACA,IAMAtE,EACO,kBAAC,EAAD,MAGP,8BACMA,GAAW,kBAAC,EAAD,CAAWqD,MAAOA,EAAOC,WAAYA,MClDjDoB,EAAa,WACtB,IAAMC,EAAUC,cACVC,EAAOR,qBAAW/C,GAChBlB,EAAYN,IAAZM,QAHoB,EAIJL,mBAAS,IAJL,mBAIrB2D,EAJqB,KAIfoB,EAJe,KAM5BtC,qBAAU,WACNI,OAAOC,EAAEkC,qBACV,IAEH,IAAMC,EAAY,uCAAG,WAAOC,GAAP,eAAA1E,EAAA,yDACC,UAAd0E,EAAMtB,IADO,0CAGUvD,EACf,qBACA,OACA,CAAE0D,KAAMJ,GACR,CACIa,cAAc,UAAD,OAAYM,EAAKrD,SAR7B,OAGHR,EAHG,OAWT2D,EAAQO,KAAR,kBAAwBlE,EAAK0C,KAAKE,MAXzB,yGAAH,sDAelB,OACI,yBAAK1B,UAAU,OACX,yBAAKA,UAAU,mBAAmBJ,MAAO,CAAEG,WAAY,SACnD,yBAAKC,UAAU,eACX,2BACIiD,YAAY,eACZnC,GAAG,OACHoC,KAAK,OACLC,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAOT,EAAQS,EAAEC,OAAOH,QAClCI,WAAYT,IAEhB,2BAAOU,QAAQ,QAAf,uBC7BPC,EAAa,WAAO,IACrBnE,EAAU6C,qBAAW/C,GAArBE,MADoB,EAEoB1B,IAAxCM,EAFoB,EAEpBA,QAASJ,EAFW,EAEXA,QAASE,EAFE,EAEFA,MAAOkB,EAFL,EAEKA,WAFL,EAGJrB,mBAAS,MAHL,mBAGrB2D,EAHqB,KAGfoB,EAHe,KAItBL,EAASmB,cAAY5C,GACrB2B,EAAUC,cACVzD,EAAU6C,IAEV6B,EAAUxF,sBAAW,sBAAC,4BAAAE,EAAA,+EAEEH,EAAQ,aAAD,OAAcqE,GAAU,MAAO,KAAM,CAC9DF,cAAc,UAAD,OAAY/C,KAHT,OAEdgD,EAFc,OAKpBM,EAAQN,GALY,uGAOzB,CAAChD,EAAOiD,EAAQrE,IAEnBoC,qBAAU,WACNqD,MACD,CAACA,IAEJrD,qBAAU,WACNrB,EAAQjB,GACRkB,MACD,CAAClB,EAAOiB,EAASC,IAEpB,IAAMkC,EAAU,uCAAG,4BAAA/C,EAAA,+EAEQH,EAAQ,aAAD,OAAcqE,GAAU,SAAU,KAAM,CAC9DF,cAAc,UAAD,OAAY/C,KAHlB,OAELR,EAFK,OAKXG,EAAQH,EAAKG,SACbwD,EAAQO,KAAK,UANF,yGAAH,qDAUhB,OAAIlF,EACO,kBAAC,EAAD,MAIP,yBAAKkC,UAAU,cACTlC,GAAW0D,GACT,yBAAKxB,UAAU,OACX,oCACA,uBAAGA,UAAU,WAAb,aACe,IACX,uBACIiB,KAAMO,EAAKK,GACXyB,OAAO,SACPM,IAAI,uBAEHpC,EAAKK,KAGd,uBAAG7B,UAAU,WAAb,aACe,IACX,uBACIJ,MAAO,CAAEmB,SAAU,cACnBE,KAAMO,EAAKI,KACX0B,OAAO,SACPM,IAAI,uBAEHpC,EAAKI,OAGd,uBAAG5B,UAAU,WAAb,qBACsB,gCAASwB,EAAKqC,SAEpC,uBAAG7D,UAAU,WAAb,gBACkB,IACd,gCACK,IAAI8D,KAAKtC,EAAKuC,MAAMC,uBAG7B,uBAAGhE,UAAU,WACT,4BACIA,UAAU,yBACViE,cAAa,UAFjB,UAMA,kBAAC,EAAD,CACI/D,OAAO,eACPC,KAAI,+CAA0CqB,EAAKI,KAA/C,KACJxB,MAAO,EACPC,KAAMe,Q,gBC7FrB8C,EAAW,WACpB,IAAMvB,EAAOR,qBAAW/C,GAClBH,EAAU6C,IAFU,EAGsBlE,IAAxCE,EAHkB,EAGlBA,QAASI,EAHS,EAGTA,QAASF,EAHA,EAGAA,MAAOkB,EAHP,EAGOA,WAHP,EAIFrB,mBAAS,CAC7BsG,MAAO,GACPC,SAAU,KANY,mBAInBC,EAJmB,KAIbC,EAJa,KAS1BhE,qBAAU,WACNrB,EAAQjB,GACRkB,MACD,CAAClB,EAAOiB,EAASC,IAEpBoB,qBAAU,WACNI,OAAOC,EAAEkC,qBACV,IAEH,IAAM0B,EAAgB,SAACxB,GACnBuB,EAAQ,2BAAKD,GAAN,kBAAatB,EAAMO,OAAOkB,KAAOzB,EAAMO,OAAOH,UAGnDsB,EAAe,uCAAG,4BAAApG,EAAA,+EAEGH,EAAQ,qBAAsB,OAAvB,eACnBmG,IAHS,OAEVvF,EAFU,OAKhBG,EAAQH,EAAKG,SALG,uGAAH,qDASfyF,EAAY,uCAAG,4BAAArG,EAAA,+EAEMH,EAAQ,kBAAmB,OAApB,eACnBmG,IAHM,OAEPvF,EAFO,OAMb6D,EAAKnD,MAAMV,EAAKQ,MAAOR,EAAKS,QANf,uGAAH,qDAUlB,OACI,yBAAKS,UAAU,OACX,yBAAKA,UAAU,oBACX,iDAEA,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,2BACX,0BAAMA,UAAU,cAAhB,iBACA,6BACI,yBAAKA,UAAU,eACX,2BACIiD,YAAY,QACZnC,GAAG,QACHoC,KAAK,OACLsB,KAAK,QACLxE,UAAU,eACVmD,MAAOkB,EAAKF,MACZf,SAAUmB,KAIlB,yBAAKvE,UAAU,eACX,2BACIiD,YAAY,WACZnC,GAAG,WACHoC,KAAK,WACLsB,KAAK,WACLxE,UAAU,eACVmD,MAAOkB,EAAKD,SACZhB,SAAUmB,OAQ1B,yBAAKvE,UAAU,eACX,4BACIA,UAAU,sBACVJ,MAAO,CAAE+E,YAAa,IACtB3D,QAAS0D,EACTE,SAAU9G,GAJd,SAQA,4BACIkC,UAAU,gCACVgB,QAASyD,EACTG,SAAU9G,GAHd,WAKa,UC7FxB+G,EAAS,WAClB,IAAMpC,EAAUC,cACVC,EAAOR,qBAAW/C,GASlB0F,EAAe,WACDpE,OAAOC,EAAEoE,QAAQC,YAC7BxE,SAASyE,cAAc,aAEnBC,SAGZ5E,qBAAU,WACNI,OAAOC,EAAEoE,QAAQlE,KAAKL,SAASyE,cAAc,eAC9C,IAEH,IAAME,EACF,6BACI,4BACI,kBAAC,IAAD,CAAStD,GAAG,UAAUb,QAAS8D,GAA/B,WAIJ,4BACI,kBAAC,IAAD,CAASjD,GAAG,SAASb,QAAS8D,GAA9B,UAIJ,4BACI,uBAAG7D,KAAK,IAAID,QA/BF,SAAC+B,GACnBA,EAAMqC,iBACNN,IACAnC,EAAKlD,SACLgD,EAAQO,KAAK,OA2BL,YAOZ,OACI,6BACI,6BACI,yBAAKhD,UAAU,6BACX,uBACIiB,KAAK,eACLjB,UAAU,mBAEV,uBAAGA,UAAU,kBAAb,SAEJ,0BACIA,UAAU,aACVJ,MAAO,CAAEyF,YAAa,SAF1B,YAMA,wBAAIvE,GAAG,aAAad,UAAU,8BACzBmF,KAKb,wBAAInF,UAAU,UAAUc,GAAG,eACtBqE,KCvCFG,MArBf,WAAgB,IAAD,ECLQ,WAAO,IAAD,EACCzH,mBAAS,MADV,mBAClByB,EADkB,KACXiG,EADW,OAEC1H,oBAAS,GAFV,mBAElB2H,EAFkB,KAEXC,EAFW,OAGG5H,mBAAS,MAHZ,mBAGlB0B,EAHkB,KAGVmG,EAHU,KAKnBlG,EAAQrB,uBAAY,SAACwH,EAAU7E,GACjCyE,EAASI,GACTD,EAAU5E,GAEV8E,aAAaC,QAXD,WAaRpH,KAAKC,UAAU,CACXa,OAAQuB,EACRxB,MAAOqG,OAGhB,IACGlG,EAAStB,uBAAY,WACvBoH,EAAS,MACTG,EAAU,MACVE,aAAaE,WAtBD,cAuBb,IAWH,OATAxF,qBAAU,WACN,IAAMxB,EAAOL,KAAKsH,MAAMH,aAAaI,QA1BzB,aA4BRlH,GAAQA,EAAKQ,OACbE,EAAMV,EAAKQ,MAAOR,EAAKS,QAE3BkG,GAAS,KACV,CAACjG,IAEG,CAAEA,QAAOC,SAAQH,QAAOC,SAAQiG,SD1BSS,GAAxC3G,EADG,EACHA,MAAOE,EADJ,EACIA,MAAOC,EADX,EACWA,OAAQF,EADnB,EACmBA,OAAQiG,EAD3B,EAC2BA,MAChC9F,IAAoBJ,EACpB4G,EELe,SAACxG,GACtB,OAAIA,EAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyG,KAAK,SAASC,OAAK,GACtB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAK,GACvB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAK,cAAcC,OAAK,GAC3B,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAUvE,GAAG,aAKrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOsE,KAAK,IAAIC,OAAK,GACjB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAUvE,GAAG,OFjBNwE,CAAU3G,GAEzB,OAAK8F,EAKD,kBAACpG,EAAYkH,SAAb,CACInD,MAAO,CAAE7D,QAAOE,QAAOC,SAAQF,SAAQG,oBAEvC,kBAAC,IAAD,KACKA,GAAmB,kBAAC,EAAD,MACpB,yBAAKM,UAAU,aAAakG,KAT7B,kBAAC,EAAD,OGHKK,QACW,cAA7B7F,OAAO8F,SAASC,UAEe,UAA7B/F,OAAO8F,SAASC,UAEhB/F,OAAO8F,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrG,SAASsG,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcxB,MACrByB,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAApJ,GACLqJ,QAAQrJ,MAAMA,EAAMiB,c","file":"static/js/main.adcdcbff.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const request = useCallback(\n        async (url, method = \"GET\", body = null, headers = {}) => {\n            setLoading(true);\n            try {\n                if (body) {\n                    body = JSON.stringify(body);\n                    headers[\"Content-Type\"] = \"application/json\";\n                }\n                const response = await fetch(url, {\n                    method,\n                    body,\n                    headers,\n                });\n                const data = await response.json();\n                if (!response.ok) {\n                    throw new Error(data.message || \"Something was wrong \");\n                }\n                setLoading(false);\n                return data;\n            } catch (e) {\n                // console.log(\"Catch:\", e.message)\n                setLoading(false);\n                setError(e.message);\n                throw e;\n            }\n        },\n        []\n    );\n\n    const clearError = useCallback(() => setError(null), []);\n    return { loading, request, error, clearError };\n};\n","import { createContext } from \"react\";\n\nfunction noop() {}\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null,\n    login: noop,\n    logout: noop,\n    isAuthenticated: false,\n});\n","import React from \"react\";\n\nexport const Loader = () => (\n    <div\n        style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            paddingTop: \"2rem\",\n        }}\n    >\n        <div className=\"preloader-wrapper big active\">\n            <div className=\"spinner-layer spinner-blue-only\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n","import React, { useEffect } from \"react\";\n\nexport const Dialog = ({ header, text, index, func }) => {\n    useEffect(() => {\n        const elems = document.querySelectorAll(\".modal\");\n        window.M.Modal.init(elems);\n    }, []);\n\n    return (\n        <div id={`modal${index}`} className=\"modal\">\n            <div className=\"modal-content\">\n                <h4>{header}</h4>\n                <p style={{ wordWrap: \"break-word\" }}>{text}</p>\n            </div>\n            <div className=\"modal-footer\">\n                <button className=\"btn-flat waves-effect\" onClick={func}>\n                    OK\n                </button>\n                <a href=\"#!\" className=\"modal-close waves-effect btn-flat\">\n                    Cancel\n                </a>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dialog } from \"./Dialog\";\n\nexport const LinksList = ({ links, deleteLink }) => {\n    if (!links.length) {\n        return <p className=\"center\">there're still no links</p>;\n    }\n\n    return (\n        <div className=\"container\" style={{ marginTop: \"2rem\" }}>\n            <div className=\"row\">\n                <div className=\"col s1\">#</div>\n                <div className=\"col s5\">Original</div>\n                <div className=\"col s4\">Shorted</div>\n                <div className=\"col s2\">Action</div>\n                {/* <div className=\"col s1\">Delete</div> */}\n            </div>\n\n            {links.map((link, index) => {\n                return (\n                    <div className=\"row\" key={link._id}>\n                        <div className=\"col s1\">{index + 1}</div>\n                        <div\n                            className=\"col s5\"\n                            style={{\n                                overflow: \"hidden\",\n                                wordWrap: \"break-word\",\n                            }}\n                        >\n                            {link.from}\n                        </div>\n                        <div\n                            className=\"col s4\"\n                            style={{\n                                overflow: \"hidden\",\n                                wordWrap: \"break-word\",\n                            }}\n                        >\n                            {link.to}\n                        </div>\n                        <div className=\"col s2\">\n                            <Link to={`/detail/${link._id}`}>Open</Link>\n                            <br />\n                            <a\n                                href={`#modal${index}`}\n                                className=\"modal-trigger\"\n                            >\n                                Delete\n                            </a>\n                            <Dialog\n                                header=\"Delete link?\"\n                                text={`Are you sure you want to delete link ${link.from}?`}\n                                index={index}\n                                func={() => deleteLink(link._id)}\n                            />\n                        </div>\n                        {/* <div className=\"col s1\">Delete</div> */}\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","import { useCallback } from \"react\";\n\nexport const useMessage = () => {\n    return useCallback((text) => {\n        if (window.M && text) {\n            window.M.toast({ html: text });\n        }\n    }, []);\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { Loader } from \"../components/Loader\";\nimport { LinksList } from \"../components/LinksList\";\nimport { useMessage } from \"../hooks/message.hook\";\n\nexport const LinksPage = () => {\n    const [links, setLinks] = useState([]);\n    const { loading, request, error, clearError } = useHttp();\n    const message = useMessage();\n    const { token } = useContext(AuthContext);\n\n    const fetchLinks = useCallback(async () => {\n        try {\n            const fetched = await request(\"api/link\", \"GET\", null, {\n                Authorization: `Bearer ${token}`,\n            });\n            setLinks(fetched);\n        } catch (error) {}\n    }, [token, request]);\n\n    const deleteLink = async (linkId) => {\n        try {\n            const data = await request(`/api/link/${linkId}`, \"DELETE\", null, {\n                Authorization: `Bearer ${token}`,\n            });\n            message(data.message);\n            fetchLinks();\n        } catch (error) {}\n    };\n\n    useEffect(() => {\n        message(error);\n        clearError();\n    }, [error, message, clearError]);\n\n    useEffect(() => {\n        fetchLinks();\n    }, [fetchLinks]);\n\n    // useEffect(() => {\n    //     fetchLinks();\n    // }, [links]);\n\n    if (loading) {\n        return <Loader />;\n    }\n    return (\n        <div>\n            {!loading && <LinksList links={links} deleteLink={deleteLink} />}\n        </div>\n    );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\nexport const CreatePage = () => {\n    const history = useHistory();\n    const auth = useContext(AuthContext);\n    const { request } = useHttp();\n    const [link, setLink] = useState(\"\");\n\n    useEffect(() => {\n        window.M.updateTextFields();\n    }, []);\n\n    const pressHandler = async (event) => {\n        if (event.key === \"Enter\") {\n            try {\n                const data = await request(\n                    \"/api/link/generate\",\n                    \"POST\",\n                    { from: link },\n                    {\n                        Authorization: `Bearer ${auth.token}`,\n                    }\n                );\n                history.push(`/detail/${data.link._id}`);\n            } catch (e) {}\n        }\n    };\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Write a link\"\n                        id=\"link\"\n                        type=\"text\"\n                        value={link}\n                        onChange={(e) => setLink(e.target.value)}\n                        onKeyPress={pressHandler}\n                    />\n                    <label htmlFor=\"link\">Input your link</label>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useCallback } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { Loader } from \"../components/Loader\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useMessage } from \"../hooks/message.hook\";\nimport { Dialog } from \"../components/Dialog\";\n\nexport const DetailPage = () => {\n    const { token } = useContext(AuthContext);\n    const { request, loading, error, clearError } = useHttp();\n    const [link, setLink] = useState(null);\n    const linkId = useParams().id;\n    const history = useHistory();\n    const message = useMessage();\n\n    const getLink = useCallback(async () => {\n        try {\n            const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\n                Authorization: `Bearer ${token}`,\n            });\n            setLink(fetched);\n        } catch (error) {}\n    }, [token, linkId, request]);\n\n    useEffect(() => {\n        getLink();\n    }, [getLink]);\n\n    useEffect(() => {\n        message(error);\n        clearError();\n    }, [error, message, clearError]);\n\n    const deleteLink = async () => {\n        try {\n            const data = await request(`/api/link/${linkId}`, \"DELETE\", null, {\n                Authorization: `Bearer ${token}`,\n            });\n            message(data.message);\n            history.push(\"/links\");\n        } catch (error) {}\n    };\n\n    if (loading) {\n        return <Loader />;\n    }\n\n    return (\n        <div className=\"container\">\n            {!loading && link && (\n                <div className=\"row\">\n                    <h2>Link</h2>\n                    <p className=\"col s12\">\n                        Your link:{\" \"}\n                        <a\n                            href={link.to}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {link.to}\n                        </a>\n                    </p>\n                    <p className=\"col s12\">\n                        It's from:{\" \"}\n                        <a\n                            style={{ wordWrap: \"break-word\" }}\n                            href={link.from}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {link.from}\n                        </a>\n                    </p>\n                    <p className=\"col s12\">\n                        Number of clicks: <strong>{link.clicks}</strong>\n                    </p>\n                    <p className=\"col s12\">\n                        Date created:{\" \"}\n                        <strong>\n                            {new Date(link.date).toLocaleDateString()}\n                        </strong>\n                    </p>\n                    <p className=\"col s12\">\n                        <button\n                            className=\"btn pink modal-trigger\"\n                            data-target={\"modal0\"}\n                        >\n                            Delete\n                        </button>\n                        <Dialog\n                            header=\"Delete link?\"\n                            text={`Are you sure you want to delete link ${link.from}?`}\n                            index={0}\n                            func={deleteLink}\n                        />\n                    </p>\n                </div>\n            )}\n        </div>\n    );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useMessage } from \"../hooks/message.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const AuthPage = () => {\n    const auth = useContext(AuthContext);\n    const message = useMessage();\n    const { loading, request, error, clearError } = useHttp();\n    const [form, setForm] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    useEffect(() => {\n        message(error);\n        clearError();\n    }, [error, message, clearError]);\n\n    useEffect(() => {\n        window.M.updateTextFields();\n    }, []);\n\n    const changeHandler = (event) => {\n        setForm({ ...form, [event.target.name]: event.target.value });\n    };\n\n    const registerHandler = async () => {\n        try {\n            const data = await request(\"/api/auth/register\", \"POST\", {\n                ...form,\n            });\n            message(data.message);\n        } catch (error) {}\n    };\n\n    const loginHandler = async () => {\n        try {\n            const data = await request(\"/api/auth/login\", \"POST\", {\n                ...form,\n            });\n            // message(data.message);\n            auth.login(data.token, data.userId);\n        } catch (error) {}\n    };\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n                <h1>Shorten your link</h1>\n\n                <div className=\"card blue darken-1\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title\">Authorization</span>\n                        <div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Email\"\n                                    id=\"email\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    className=\"yellow-input\"\n                                    value={form.email}\n                                    onChange={changeHandler}\n                                />\n                                {/* <label htmlFor=\"email\">Input your email</label> */}\n                            </div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Password\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"yellow-input\"\n                                    value={form.password}\n                                    onChange={changeHandler}\n                                />\n                                {/* <label htmlFor=\"password\">\n                                    Input your password\n                                </label> */}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn yellow darken-4\"\n                            style={{ marginRight: 10 }}\n                            onClick={loginHandler}\n                            disabled={loading}\n                        >\n                            Login\n                        </button>\n                        <button\n                            className=\"btn grey lighten-1 black-text\"\n                            onClick={registerHandler}\n                            disabled={loading}\n                        >\n                            Register{\" \"}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const Navbar = () => {\n    const history = useHistory();\n    const auth = useContext(AuthContext);\n\n    const logoutHandler = (event) => {\n        event.preventDefault();\n        closeHandler();\n        auth.logout();\n        history.push(\"/\");\n    };\n\n    const closeHandler = () => {\n        const sidenav = window.M.Sidenav.getInstance(\n            document.querySelector(\".sidenav\")\n        );\n        sidenav.close();\n    };\n\n    useEffect(() => {\n        window.M.Sidenav.init(document.querySelector(\".sidenav\"));\n    }, []);\n\n    const navList = (\n        <div>\n            <li>\n                <NavLink to=\"/create\" onClick={closeHandler}>\n                    Create\n                </NavLink>\n            </li>\n            <li>\n                <NavLink to=\"/links\" onClick={closeHandler}>\n                    Links\n                </NavLink>\n            </li>\n            <li>\n                <a href=\"/\" onClick={logoutHandler}>\n                    Logout\n                </a>\n            </li>\n        </div>\n    );\n\n    return (\n        <div>\n            <nav>\n                <div className=\"nav-wrapper blue darken-1\">\n                    <a\n                        href=\"#mobile-demo\"\n                        className=\"sidenav-trigger\"\n                    >\n                        <i className=\"material-icons\">menu</i>\n                    </a>\n                    <span\n                        className=\"brand-logo\"\n                        style={{ paddingLeft: \"1rem\" }}\n                    >\n                        Shortify\n                    </span>\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                        {navList}\n                    </ul>\n                </div>\n            </nav>\n\n            <ul className=\"sidenav\" id=\"mobile-demo\">\n                {navList}\n            </ul>\n        </div>\n    );\n};\n","import React from \"react\";\nimport \"materialize-css\";\nimport { useRoutes } from \"./routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useAuth } from \"./hooks/auth.hook\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Loader } from \"./components/Loader\";\n\nfunction App() {\n    const { token, login, logout, userId, ready } = useAuth();\n    const isAuthenticated = !!token;\n    const routes = useRoutes(isAuthenticated);\n\n    if (!ready) {\n        return <Loader />;\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{ token, login, logout, userId, isAuthenticated }}\n        >\n            <Router>\n                {isAuthenticated && <Navbar />}\n                <div className=\"container\">{routes}</div>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import { useState, useCallback, useEffect } from \"react\";\n\nconst storageName = \"userData\";\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null);\n    const [ready, setReady] = useState(false);\n    const [userId, setUserId] = useState(null);\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken);\n        setUserId(id);\n\n        localStorage.setItem(\n            storageName,\n            JSON.stringify({\n                userId: id,\n                token: jwtToken,\n            })\n        );\n    }, []);\n    const logout = useCallback(() => {\n        setToken(null);\n        setUserId(null);\n        localStorage.removeItem(storageName);\n    }, []);\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName));\n\n        if (data && data.token) {\n            login(data.token, data.userId);\n        }\n        setReady(true);\n    }, [login]);\n\n    return { login, logout, token, userId, ready };\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LinksPage } from \"./pages/LinksPage\";\nimport { CreatePage } from \"./pages/CreatePage\";\nimport { DetailPage } from \"./pages/DetailPage\";\nimport { AuthPage } from \"./pages/AuthPage\";\n\nexport const useRoutes = (isAuthenticated) => {\n    if (isAuthenticated) {\n        return (\n            <Switch>\n                <Route path=\"/links\" exact>\n                    <LinksPage />\n                </Route>\n                <Route path=\"/create\" exact>\n                    <CreatePage />\n                </Route>\n                <Route path=\"/detail/:id\" exact>\n                    <DetailPage />\n                </Route>\n                <Redirect to=\"/create\" />\n            </Switch>\n        )\n    }\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <AuthPage />\n            </Route>\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}